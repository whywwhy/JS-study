## 04. 기본형 데이터와 참조형 데이터 

#### 불변값 
변수와 상수를 구분하는 성질은 '변경가능성' 
바꿀 수 O - 변수 / X - 상수 

변수와 상수를 구분 짓는 변경 가능성의 대상은 **변수 영역** 메모리 
-> 한 번의 데이터 할당이 이뤄진 변수 공간에 다른 데이터 재할당 여부 관건 

불변성 여부를 구분할 때의 변경 가능성의 대상은 **데이터영역** 메모리 

<hr/>

기본형의 데이터인 숫자, 문자열 boolean, null, undefined, Symbol은 모두 불변값. 
```
var a = 'abc';
a = a + 'def';

var b = 5;
var c = 5;
b = 7;
```
변수 a에 문자열 'abc' 할당, 뒤에 'def'추가 시 
새로운 문자열 'abcdef'를 만들어 그 주소 a에 저장. 

변수 b에 숫자 5 할당. 
5줄, 이미 만들어 놓은 값이 있으니 그 주소 재활용 

변수 b를 7로 바꾸려 할 때 
기본에 저장된 7을 찾아 재활용, 없으면 새로 b에 저장 

*불변값의 성질 - 한 번 만들어진 값은 가비지 컬레팅 당하지 않는 한 영원히 미변경*

#### 가변값 
기본형 데이터는 모두 불변값. 

if 참조형 데이터? 
기본적인 성질은 가변값인 경우가 많음. 
설정에 따라 변경 불가 경우 존재, 아예 불변값으로 활용하는 방법 있음 

참조형 데이터를 변수에 할당하는 과정 -> 
```
var obj1 = {
	a: 1,
    b: 'bbb'
};
```
![](https://velog.velcdn.com/images/whywwhy/post/dcf36052-58f1-44a6-9e97-98ed7fbb468d/image.png)

1. 우선 변수 영역 빈공간(@1002)확보, 그 주소이름 obj1로 지정 
2. 임의 데이터 공간(@5001)에 데이터 저장 -> 프로퍼티로 이뤄지 데이터 그룹. 
내부 프로퍼티를 저장하기 위해 별도의 변수영역 마련, 그 영역의 주소(@7103~?)를 @5001에 지정 
3. @7103및 @7104에 각각 a와 b라는 프로퍼티 이름을 지정 
4. 데이터 영역에서 숫자 1 검색. 
검색 결과 X -> 임의로 @5003에 저장, 이 주소를 @7103에 저장. 
문자열 'bbb' 임의로 @5004에 저장, 주소 @7104에 저장. 

기본형 데이터와 차의 : '객체의 변수(프로퍼티)영역'이 별도로 존재 
-> 참조형 데이터는 불변하지 않다(가변값이다)라고 하는것 

```
var obj1 = {
	a: 1, 
    b: 'bbb'
};
obj1.a = 2;
``` 
새로운 객체가 만들어진 것이 아닌, 기본의 객체 내부의 값만 변경됨. 
<hr/>

![](https://velog.velcdn.com/images/whywwhy/post/d45675cf-f9d3-4a1e-882f-cd06669a5144/image.png)

이러한 경우를 중첩객체라 말함. 
```
var obj = {
	x: 3,
    arr: [3, 4, 5]
};
```
1. 컴퓨터는 ㅇ선 변수 공간(@1002)확보, 주소 이름 obj로 지정 
2. 임의 데이터 저장공간(@5001)에 데이터 지정 -> 여러개의 변수와 값들을 모아놓은 그룹(객체)임 
프로퍼티를 저장하기 위해 별도의 변수 영역을 마련(@7103~?)를 @5001에 지정 
3. @7103에 이름 x, @7104에 이름 arr 지정. 
4. 데이터 영역에서 숫자 3 검색 -> 없음 -> @5002에 저장, 이 주소 @7103에 저장 
5. @7104에 저장할 값 배열 
프로퍼티들을 저장하기 위해 별도의 변수 영역을 마련(@8104~?)
그 영역의 주소 정보(@8104~?)를 @5003에 저장 다음, @5003을 @7104에 저장 
6. 배열의 요소가 총 3개이므로 3개의 변수공간을 확보, 각각의 인덱스 부여 
7. 데이터 영역에서 숫자 3 검색(@5002) 그 주소를 @8104에 저장 
8. 데이터 영역에 숫자 4 X -> @5004에 저장, 이 주소를 @8105저장 
9. 데이터 영역에 숫자 5 X -> @5005에 저장, 이 주소를 @8106저장 

<hr/>

![](https://velog.velcdn.com/images/whywwhy/post/d64c99ee-d526-464c-8caa-ab84e530f67f/image.png)
obj.arr[1] 검색하기 
-> @5003의 참조카운트는 @7104에 @5003이 저장돼어 있는 시점까지는 1이었다가 @7104에 @5006이 저장되는 순간 0이 됨. 참조카운트가 0인 메모리 주소는 가비지 컬렉터의 수거 대상이 됨.

#### 변수 복사 비교 
```
var a = 10;
var b = a;

var obj1 = {C: 10, d: 'ddd'};
var obj2 = obj1;
```
![](https://velog.velcdn.com/images/whywwhy/post/212c789c-e309-4c6c-bae7-2195e8940de9/image.png)

**변수 복사 이후 값 변경 결과 비교 - 객체 프로퍼티 변경**
```
var a = 10;
var b = a;
var obj1 = {c: 10, d: 'ddd'};
var obj2 = obj1;

b = 15;
obj2.c = 20;
```
![](https://velog.velcdn.com/images/whywwhy/post/50c19d3d-6378-46ed-921f-c21f35327433/image.png)

**변수 복사 이후 값 변경 결과 비교 - 객체 자체 변경**
```
var a = 10;
var b = a;
var obj1 = { c: 10, d: 'ddd' };
var obj2 = obj1;

b = 15;
obj2 = { c: 20, d: 'ddd' };
```
![](https://velog.velcdn.com/images/whywwhy/post/8426043b-8cf1-4564-9def-d2ebb2b1c73b/image.png)
 
